dat
dat<- data.frame(id=numeric(),nobs=numeric(),stringsAsFactors=F)
dat
x<- 2
y <-3
dat<-rbind(dat,list(x,y))
dat
dat<- data.frame(id=numeric(),nobs=numeric(),stringsAsFactors=F)
dat
y <-3
x<- 2
dat<-rbind(dat,c(x,y))
dat
dat<-rbind(dat,c(x,y))
dat
mm<-mat(,2)
mm<-matrix(,2)
mm
mm<-matrix(2,)
mm
mm<-matrix(nrow=0,ncol=2)
mm
x
y
mm<-rbind(mm,c(x,y))
mm
mm<-rbind(mm,c(x,y))
mm
mdat <-data.frame(mm)
mm
mdat <-data.frame(mm, row.name=NULL)
mdat <-data.frame(mm, row.names=NULL)
mdat
View(mm)
View(mm)
mdat<- as.data.frame(mm)
mdat
f<-c(f,x)
f(numeric)
f<-(numeric)
f<-c(f,x)
f
f<-c(f,x)
f
f<-c(f,x)
f
complete <- function(directory,id = 1:332){
files_full<- list.files(directory,full.names=T)
dat<- data.frame()
for ( i in seq_along(id)) {
x<-read.csv(files_full[id[i]])
comp<-complete.cases(x)
y<-sum(comp)
dat<-rbind(dat,data.frame(id=id[i],nob=y))
}
dat
}
complete("specdata",1)
complete("specdata",30:25)
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
6
complete <- function(directory,id = 1:332){
files_full<- list.files(directory,full.names=T)
dat<- data.frame()
for ( i in seq_along(id)) {
x<-read.csv(files_full[id[i]])
comp<-complete.cases(x)
y<-sum(comp)
dat<-rbind(dat,data.frame(id=id[i],nobs=y))
}
dat
}
submit()
6
submit()
submit()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag(colors))
head(flag_colors)
lapply(flag_colors,sum())
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,funtion(elem) elem[2])
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
files_full<- list.files(directory,full.names=T)
files_full<- list.files("specdata/",full.names=T)
length(files_full)
corr <- function(directory,threshold=0){
files_full<- list.files(directory,full.names=T)
id<- length(file_full)
dat<- data.frame()
for ( i in id) {
x<-read.csv(files_full[i])
comp<-complete.data(x)
if (comp> threshold) {
dat <- rbind(dat,read.csv(files_full[i]))
}
}
dat
}
test<-corr("specdata",100)
test<-corr("specdata",100)
corr <- function(directory,threshold=0){
files_full<- list.files(directory,full.names=T)
id<- length(files_full)
dat<- data.frame()
for ( i in id) {
x<-read.csv(files_full[i])
comp<-complete.data(x)
if (comp> threshold) {
dat <- rbind(dat,read.csv(files_full[i]))
}
}
dat
}
test<-corr("specdata",100)
corr <- function(directory,threshold=0){
files_full<- list.files(directory,full.names=T)
id<- length(files_full)
dat<- data.frame()
for ( i in id) {
x<-read.csv(files_full[i])
comp<-complete.cases(x)
if (comp> threshold) {
dat <- rbind(dat,read.csv(files_full[i]))
}
}
dat
}
test<-corr("specdata",100)
test
corr <- function(directory,threshold=0){
files_full<- list.files(directory,full.names=T)
id<- length(files_full)
dat<- data.frame()
for ( i in id) {
x<-read.csv(files_full[i])
comp<-complete.cases(x)
if (comp > threshold) {
dat <- rbind(dat,data.frame(x))
}
}
dat
}
test<-corr("specdata",100)
test
files_full<- list.files("specdata/",full.names=T)
x<-read.csv(files,full[3])
x<-read.csv(files_full[3])
x
comp<-comp.cases(x)
comp<-complete.cases(x)
comp
corr <- function(directory,threshold=0){
files_full<- list.files(directory,full.names=T)
id<- length(files_full)
dat<- data.frame()
for ( i in id) {
x<-read.csv(files_full[i])
comp<-complete.cases(x)
y=sum(comp)
if (comp > threshold) {
dat <- rbind(dat,data.frame(x))
}
}
dat
}
test<-corr("specdata",100)
corr <- function(directory,threshold=0){
files_full<- list.files(directory,full.names=T)
id<- length(files_full)
dat<- data.frame()
for ( i in id) {
x<-read.csv(files_full[i])
comp<-complete.cases(x)
y=sum(comp)
if (y > threshold) {
dat <- rbind(dat,data.frame(x))
}
}
dat
}
test<-corr("specdata",100)
test
corr <- function(directory,threshold=0){
files_full<- list.files(directory,full.names=T)
id<- length(files_full)
dat<- data.frame()
for ( i in id) {
x<-read.csv(files_full[i])
comp<-complete.cases(x)
y=sum(comp)
if (y > threshold) {
dat <- rbind(dat,read.csv(files_full[i]))
}
}
dat
}
test<-corr("specdata",100)
corr <- function(directory,threshold=0){
files_full<- list.files(directory,full.names=T)
id<- length(files_full)
dat<- data.frame()
for ( i in id) {
x<-read.csv(files_full[i])
comp<-complete.cases(x)
y=sum(comp)
if (y > threshold) {
dat <- rbind(dat,read.csv(files_full[i]))
}
}
dat
}
test<-corr("specdata",100)
debugSource('~/Documents/class/corr.R')
test<-corr("specdata",100)
q
debugSource('~/Documents/class/corr.R')
test<-corr("specdata",100)
source('~/Documents/class/corr.R')
test<-corr("specdata",900)
test
head(test)
lapply(test,unique)
lapply(test$ID,unique)
head(test)
tapply(test$ID,unique)
tapply(test$ID,range)
lapply(test,range)
class(test)
lapply(test,class)
tapply(test$ID,test$sulfate,mean)
tapply(test$ID,test$sulfate,mean)
x<-read.csv("specdata/002.csv")
cor(x)
cor(x[,2],x[,3])
cor(x[,2],x[,3],na.rm=T)
cor(x[,2],x[,3],na.rm=F)
head(x)
x2<-x[,2]
head(x2)
cor(x[,2],x[,3],na.rm=TRUE)
cor(x=x[,2],y=x[,3],na.rm=TRUE)
x
weg<-x(is.na)
weg<-is.na(x)
weg
xohnena<-x[!weg]
xohnena
head(xohnena)
cor(x=x[,2],y=x[,3],use="na.or.complete")
cor(x[,2],x[,3],use="na.or.complete")
source('~/Documents/class/corr1.R')
cr<-corr("specdata",500)
source('~/.active-rstudio-document')
cr<-corr("specdata",500)
cr<-corr("specdata",150)
summary(cr)
class(cr)
str(cr)
cr<-corr("specdata",5000)
cr
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
swirl()
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nros(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tails(plants,15)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
load(datasets)
library(datasets)
data(iris)
head(iris)
m<-mean(iris[,1],iris$Species=="setosa")
m<-mean(iris[,1])
set<-iris$Species=="virginica"
set
virg<-iris(set)
virg<-iris[set]
virg<-iris[[set]]
virg<-subset(iris,Species=="virginica")
virg
m<-mean(virg[,1])
m
test<-apply(iris[, 1:4], 2, mean)
test
set<-iris[iris$species=="virginica"]
set
set<-iris[,iris$species=="virginica"]
set
View(set)
set<-iris[,iris$species=="virginica", ]
set
set<-iris[iris$species=="virginica", ]
set
set<-iris[iris$species==virginica, ]
iris
set<-iris[iris$Species==virginica, ]
set<-iris[iris$Species=="virginica", ]
set<-iris[iris$Species=="virginica"]
set<-iris[iris$Species=="virginica", ]
set
m<-mean(set[ ,1])
m
dat(mtcars)
data(mtcars)
head(mtcars)
sapply(mtcars mean)
sapply(mtcars, mean)
sapply(mtcars[,1:2], mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
s<-split(mtcars$mpg, mtcars$cyl)
s
sapply(split(mtcars$hp, mtcars$cyl), mean)
s<-sapply(split(mtcars$hp, mtcars$cyl), mean)
s
str(s)
diff<-s[3]-s[1]
diff
debug(ls)
ls()
q
q
2
2
1
quit
klinik<-read.csv("fallexport.csv",header=T,sep=";")
klinik<-read.csv2("fallexport.csv",header=T)
klinik<-read.table("fallexport.csv",header=T)
klinik<-read.table(fallexport.csv,header=T)
klinik<-read.csv2("fallexport.csv",header=T)
dir()
klinik<-read.csv2("fallexport.csv")
klinik<-read.csv2("falexport.csv",unique=f)
klinik<-read.csv2("falexport.csv",unique=F)
klinik<-read.csv2("falfexport.csv",unique=F)
klinik<-read.csv2("falfexport.csv")
klinik<-read.csv2("fallexport.csv")
klinik<-read.csv2("fallexport.csv",fileEncoding="UTF-8")
klinik<-read.csv2("fallexport.csv",sep=";",fileEncoding="UTF-8")
klinik<-read.csv2("fallexport.csv",sep=";")
klinik<-read.csv2("fallexport.csv",encoding="ISO-8859-1",sep=";")
klinik<-read.csv2(file("fallexport.csv",encoding="ISO-8859-1"),sep=";")
dim klinik
dim (klinik)
hand<-klinik[klinik$Abt="H-CHI"]
hand<-klinik[klinik$Abt="H-CHI",1]
hand<-klinik[klinik$Abt=="H-CHI"]
hand<-klinik[klinik$Abt=="H-CHI",]
hand[27]
hand[30]
kat=hand[30]
kat
kats<-split(kat)
str(kat)
kats<-split(kat,kat)
kats
kats<-split(kat,mean)
kats<-split(kat,mean())
kat
str(kat)
sum(kat)
r
?str
summary(kat)
amb<-klinik[30]
summary(amb)
?summary
summary(amb,maxsum=10)
summary(amb,maxsum=15)
summary(amb,maxsum=20)
View(hand)
amb<-klinik[30]
str(klinik)
names(klinik)
k1<-klinik[,c(1:9,16,27,30,31,53:55,86,89,142,144,157)]
k1
names(k1)
hist(k1[,19])
k1[,19]
hist(k1[,19],breaks=c(10,20,30,40,50,60,70,80,90,100,110))
hist(k1[,19],breaks=c(10,20,30,40,50,60,70,80,90,100,110:400))
hist(k1[,19]
)
min(kl[,19])
min(k1[,19])
min(k1[,19],na.rm=F)
min(k1[,19],na.rm=T)
max(k1[,19],na.rm=T)
range(k1[,19],na.rm=T)
names(k1)
names(klinik)
k1<-klinik[,c(1:9,16,27,30,31,53:55,86,89,120,142,144,157)]
names(k1)
k1[,8]
names(k1)
k1[,19]
k_op<-k1[k1$OP=="J",]
k_op
names(k_op)
summary(k_op[,21])
klinik<-read.csv2(file("fallexport.csv",encoding="ISO-8859-1"),sep=";")
kl<-klinik[,c(1:9,16,27,30,31,53:55,86,89,120,142,144,157)]]
kl<-klinik[,c(1:9,16,27,30,31,53:55,86,89,120,142,144,157)]
summary(kl[,21])
hand_op<-klinik[with(klinik, Abt=="H-CHI" & OP == "J"), ])
hand_op<-klinik[with(klinik, Abt=="H-CHI" & OP == "J"), ]
hand_op
names(hand_op)
hand_op<-kl[with(kl, Abt=="H-CHI" & OP == "J"), ]
kl
names(kl)
plot(hand_op[20],hand_op[22])
plot(hand_op[20],hand_op[22],type="p")
point(hand_op[20],hand_op[22],type="p")
points(hand_op[20],hand_op[22],type="p")
zeit_ein<-hand_op[,c(20,22)]
ploz(zeit_ein)
plot(zeit_ein)
setwd("~/ProgrammingAssignment2")
source('~/ProgrammingAssignment2/mean.R')
cachemean(makeVector(1:10))
x <-matrix(c(8,13,5,8), nrow=2, ncol=2)
y<-solve(x)
y
makeVector(1:10)
y<-makeVector(1:10)
y
y$1
y$get
x
y
